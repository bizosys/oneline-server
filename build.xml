<?xml version="1.0"?>
<project name="oneline-server" basedir=".">

	<property name="currdir" value="${basedir}" />
	<property file="${currdir}/build.properties" />
	<property name="warfilename" value="${name}.war" />

	<tstamp>
		<format property="build.time" pattern="dd MMM yyyy hh:mm aa"/>
	</tstamp>
	
	<!-- the normal classpath -->
	<path id="classpath">
		<pathelement location="${build.classes}" />
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>	
	</path>

	<!-- ====================================================== -->
	<!-- Stuff needed by all targets                            -->
	<!-- ====================================================== -->
	<target name="init">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.classes}" />
		<mkdir dir="${build.web.dir}" />
	</target>

	<!-- ====================================================== -->
	<!-- Compile the Java files                                 -->
	<!-- TODO:: Add depends="init,generator" once the code generation is fixed -->
	<!-- ====================================================== -->
	<target name="compile" depends="compile-core" />

	<target name="compile-core" depends="init">
	  	<echo message="Java home: ${java.home} - ${ant.java.version} : javac.version - ${javac.version}"/>
		<javac encoding="${build.encoding}" 
			destdir="${build.classes}" debug="${javac.debug}" optimize="${javac.optimize}" 
			target="${javac.version}" source="${javac.version}" deprecation="${javac.deprecation}">
			<classpath refid="classpath" />
		    <src path="${src.dir}"/>
		</javac>
	</target>
	
	<!-- ================================================================== -->
	<!-- All source file jar -->
	<!-- ================================================================== -->
	<target name="jar-sources">
	  	<echo message="Adding classses from: ${src.dir}/../.."/>
		<jar destfile="nightly/src-${name}_${version}.jar"  >
			<manifest>
				<attribute name="Created-By" value="${company}(${build.time})"/>
				<attribute name="Version" value="${version}"/>
				<attribute name="BuildDate" value="${build.time}"/>
			</manifest>		
			
			<fileset dir="${src.dir}/../.." >
				<exclude name="**/*.gz"/>
				<exclude name="**/*.jar"/>
				<exclude name="**/*.so"/>
				<exclude name="**/*.so.*"/>
				<exclude name="**/*.a"/>
				<exclude name="**/*.bz2"/>
				<exclude name="**/*.class"/>
				<exclude name="**/*.war"/>
				<exclude name="docs/**"/>
				<exclude name="classes/**"/>
				<exclude name="lib/**"/>
				<exclude name="nightly/**"/>
			</fileset>					
		</jar>
	</target>	

	<!-- ================================================================== -->
	<!-- Make jar                                                           -->
	<!-- ================================================================== -->
	<target name="jar" depends="compile-core,jar-sources">
		<jar jarfile="${build.dir}/${name}.jar" basedir="${build.classes}">
			<manifest>
				<attribute name="Created-By" value="${company}(${build.time})"/>
				<attribute name="Version" value="${version}"/>
				<attribute name="BuildDate" value="${build.time}"/>
			</manifest>
		</jar>
	</target>
	

	<!-- ================================================================== -->
	<!-- Make war                                                     -->
	<!-- ================================================================== -->
	<macrodef name="makewardef">
		<attribute name="sitexml"/>
		<attribute name="warfilename"/>
		<attribute name="jarfilestoinclude"/>
		<sequential>
			<war destfile="${build.dir}/@{warfilename}" webxml="${currdir}/webapps/WEB-INF/web.xml">
				
				<fileset dir="${build.web.dir}" includes="**/*" />
				<fileset dir="${currdir}/webapps" includes="**/*">
					<excludesfile name="${currdir}/webapps/WEB-INF/web.xml" />
				</fileset>

				<zipfileset dir="${src.dir}" includes="**/*.xml" prefix="/WEB-INF/classes/" />
				
				<classes dir="${conf.dir}">
					<exclude name="dataservice-site.xml"/>
					<exclude name="jdbc.conf"/>
				</classes>
				
				<lib dir="${lib.dir}" >
					<include name="@{jarfilestoinclude}"/>
				</lib>

				<lib dir="${build.dir}">
					<include name="*.jar" />
				</lib>
				
				<manifest>
					<attribute name="version" value="${version}"/>
					<attribute name="builton" value="${build.time}"/>
				</manifest>
				
			</war>
		</sequential>
	
	</macrodef>
	
	<!-- ================================================================== -->
	<!-- D I S T R I B U T I O N  Targets                                   -->
	<!-- ================================================================== -->
	<target name="war" depends="clean.all, init, jar">
		<makewardef sitexml="site.xml" warfilename="${warfilename}" jarfilestoinclude="*.jar"/>
	</target>
	
	<target name="war-incemental" depends="jar">
		<makewardef sitexml="site.xml" warfilename="${warfilename}" jarfilestoinclude="*.jar"/>
	</target>

	<target name="war.local.copy" depends="war">
		<copy file="${build.dir}/${warfilename}" todir="${HTTP_HOME}" />
	</target>

	<!-- ================================================================== -->
	<!-- Clean.  Delete the build files, and their directories              -->
	<!-- ================================================================== -->
	<target name="clean.all">
	    <delete dir="${build.classes}" />
	    <delete dir="${build.web.dir}" />
		<delete file="${build.dir}/${warfilename}" />
		<delete dir="${build.dir}" />
	</target>

	
	 <target name="javadoc" depends="init" description="Generate Documentation">
	    <javadoc sourcepath="${src.dir}" destdir="${javadoc.dir}" classpathref="classpath"/>
	 	 <javadoc sourcepath="${frameworks.dir}" destdir="${javadoc.dir}" classpathref="classpath"/>
	  </target>

	<!-- ================================================================== -->
	<!-- Make war local                                                    -->
	<!-- ================================================================== -->
	<macrodef name="makewardeflocal">
		<attribute name="sitexml"/>
		<attribute name="warfilename"/>
		<attribute name="jarfilestoinclude"/>
		<sequential>
			<war destfile="${build.dir}/@{warfilename}" webxml="${currdir}/webapps/WEB-INF/web.xml">
				
				<fileset dir="${build.web.dir}" includes="**/*" />
				<fileset dir="${currdir}/webapps" includes="**/*">
					<excludesfile name="${currdir}/webapps/WEB-INF/web.xml" />
				</fileset>

				<zipfileset dir="${src.dir}" includes="**/*.xml" prefix="/WEB-INF/classes/" />
				
				<classes dir="${conf.dir}" includes="*.*"></classes>
				
				<lib dir="${lib.dir}" >
					<include name="@{jarfilestoinclude}"/>
				</lib>

				<lib dir="${build.dir}">
					<include name="*.jar" />
				</lib>
				
				<manifest>
					<attribute name="version" value="${version}"/>
					<attribute name="builton" value="${build.time}"/>
				</manifest>
				
			</war>
		</sequential>
	</macrodef>

	<target name="war-local" depends="clean.all, init, jar">
			<makewardeflocal sitexml="site.xml" warfilename="${warfilename}" jarfilestoinclude="*.jar"/>
	</target>

</project>